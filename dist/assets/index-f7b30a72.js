var Z=Object.defineProperty;var B=(r,t,e)=>t in r?Z(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var M=(r,t,e)=>(B(r,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function e(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(n){if(n.ep)return;n.ep=!0;const s=e(n);fetch(n.href,s)}})();class z{constructor(t){this.bitCapacity=t;const e=this.bitCapacity+7>>3;this.buffer=new Uint8Array(e),this.bitOffset=0}append(t,e){for(let i=0;i<e;i++){const n=this.buffer[this.bitOffset>>3],o=1<<7-(this.bitOffset&7),l=1<<e-1-i;this.buffer[this.bitOffset>>3]=n&~o|(t&l?o:0),this.bitOffset++}}position(){return this.bitOffset}read(t){return this.buffer[t>>3]&1<<7-(t&7)?1:0}}const A=class A{static canEncode(t){return[...t].every(e=>A.CHARSET.includes(e))}static payloadSize(t){const e=t.length;return 10*Math.floor(e/3)+e%3*4-Math.floor(e%3/2)}static countSize(t){return t<10?10:t<27?12:14}static totalSize(t,e){return y.MODE_BITS+A.countSize(t)+A.payloadSize(e)}static encode(t,e,i){const n=[...i].map(s=>s.charCodeAt(0)-48);t.append(A.MODE,y.MODE_BITS),t.append(n.length,A.countSize(e));for(let s=0;s<n.length;){n.length-s>3||n.length-s;let o=n[s],l=4;s++,s<n.length&&(o=o*10+n[s],l+=3,s++),s<n.length&&(o=o*10+n[s],l+=3,s++),t.append(o,l)}}};M(A,"MODE",1),M(A,"CHARSET","0123456789");let F=A;const R=class R{static canEncode(t){return[...t].every(e=>R.CHARSET.includes(e))}static payloadSize(t){const e=t.length;return 11*Math.floor(e/2)+6*(e%2)}static countSize(t){return t<10?9:t<27?11:13}static totalSize(t,e){return y.MODE_BITS+R.countSize(t)+R.payloadSize(e)}static encode(t,e,i){const n=[...i].map(s=>R.CHARSET.indexOf(s));t.append(R.MODE,y.MODE_BITS),t.append(n.length,R.countSize(e));for(let s=0;s<n.length;){let o=n[s],l=6;s++,s<n.length&&(o=o*45+n[s],l+=5,s++),t.append(o,l)}}};M(R,"MODE",2),M(R,"CHARSET","0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:");let T=R;const m=class m{static canEncode(t){return[...t].every(e=>e.charCodeAt(0)>=0&&e.charCodeAt(0)<=255)}static payloadSize(t){return 8*t.length}static countSize(t){return t<10?8:(t<27,16)}static totalSize(t,e){return y.MODE_BITS+m.countSize(t)+m.payloadSize(e)}static encode(t,e,i){const n=[...i].map(s=>s.charCodeAt(0));t.append(m.MODE,y.MODE_BITS),t.append(n.length,m.countSize(e));for(let s=0;s<n.length;s++)t.append(n[s],8)}};M(m,"MODE",4);let U=m;const O=class O{constructor(t){this.text=t;for(let e of Object.values(O.MODES))if(e.canEncode(this.text)){this.mode=e;return}throw"Cannot encode text"}};M(O,"MODES",{numeric:F,alphanumeric:T,eightBit:U}),M(O,"MODE_BITS",4),M(O,"MODE_INDICATOR_TERMINATOR",0);let y=O;class b{static Multiply(t,e){let i=0;for(let n=7;n>=0;n--)i=(i<<1^(i>>7)*285)&255,i^=(e>>n&1)*t;return i}static Divisor(t){const e=new Uint8Array(t);e.fill(0),e[t-1]=1;let i=1;for(let n=0;n<t;n++){for(let s=0;s<t;s++)e[s]=b.Multiply(e[s],i),s+1<t&&(e[s]^=e[s+1]);i=b.Multiply(i,2)&255}return e}static Remainder(t,e,i,n,s,o,l){o.fill(0,l,l+s);for(let u=0;u<i;u++){let f=t[e+u]^o[l+0];o.copyWithin(l,l+1,l+1+s-1),o[l+s-1]=0;for(let d=0;d<s;d++)o[l+d]^=b.Multiply(n[d],f)}}}const c=class c{static calculateDimension(t){return 17+4*t}static calculateMask(t,e,i){switch(t){case 0:return(i+e&1)==0;case 1:return(i&1)==0;case 2:return e%3==0;case 3:return(i+e)%3==0;case 4:return((i>>1)+(e/3|0)&1)==0;case 5:return(i*e&1)+i*e%3==0;case 6:return((i*e&1)+i*e%3&1)==0;case 7:return(i*e%3+(i+e&1)&1)==0;default:return!1}}static alignmentCoordinates(t){const e=t<=1?0:Math.floor(t/7)+2,i=Array(e),n=t==32?26:Math.floor((t*4+e*2+1)/(e*2-2))*2;let s=t*4+10;for(let o=e-1;o>0;o--)i[o]=s,s-=n;return e>0&&(i[0]=6),i}constructor(t){this.version=t,this.dimension=c.calculateDimension(this.version);const e=this.dimension*this.dimension;this.buffer=new Array(e),this.identity=new Array(e),this.quiet=c.QUIET_STANDARD,this.invert=!1,this.text=null}setModule(t,e,i,n){if(t<0||e<0||t>=this.dimension||e>=this.dimension)return;const s=e*this.dimension+t;this.buffer[s]=i,typeof n<"u"&&(this.identity[s]=n)}getModule(t,e){if(t<0||e<0||t>=this.dimension||e>=this.dimension)return null;const i=e*this.dimension+t;return this.buffer[i]}identifyModule(t,e){if(t<0||e<0||t>=this.dimension||e>=this.dimension)return;const i=e*this.dimension+t;return this.identity[i]}drawFinder(t,e){for(let i=-Math.floor(c.FINDER_SIZE/2)-1;i<=Math.floor(c.FINDER_SIZE/2)+1;i++)for(let n=-Math.floor(c.FINDER_SIZE/2)-1;n<=Math.floor(c.FINDER_SIZE/2)+1;n++){let s=(Math.abs(n)>Math.abs(i)?Math.abs(n):Math.abs(i))&1?c.MODULE_DARK:c.MODULE_LIGHT;n==0&&i==0&&(s=c.MODULE_DARK);const o=n==0&&i==0?"FI":"Fi";this.setModule(t+n,e+i,s,o)}}drawTiming(){const t="Ti";for(let e=c.FINDER_SIZE+1;e<this.dimension-c.FINDER_SIZE-1;e++){let i=~e&1?c.MODULE_DARK:c.MODULE_LIGHT;this.setModule(e,c.TIMING_OFFSET,i,t),this.setModule(c.TIMING_OFFSET,e,i,t)}}drawAlignment(t,e){for(let i=-c.ALIGNMENT_RADIUS;i<=c.ALIGNMENT_RADIUS;i++)for(let n=-c.ALIGNMENT_RADIUS;n<=c.ALIGNMENT_RADIUS;n++){let s=1-((Math.abs(n)>Math.abs(i)?Math.abs(n):Math.abs(i))&1)?c.MODULE_DARK:c.MODULE_LIGHT;const o=n==0&&i==0?"AL":"Al";this.setModule(t+n,e+i,s,o)}}populateFunctionPatterns(){this.drawFinder(Math.floor(c.FINDER_SIZE/2),Math.floor(c.FINDER_SIZE/2)),this.drawFinder(this.dimension-1-Math.floor(c.FINDER_SIZE/2),Math.floor(c.FINDER_SIZE/2)),this.drawFinder(Math.floor(c.FINDER_SIZE/2),this.dimension-1-Math.floor(c.FINDER_SIZE/2)),this.drawTiming();const t=c.alignmentCoordinates(this.version);for(let e of t)for(let i of t)e<=c.FINDER_SIZE&&i<=c.FINDER_SIZE||e>=this.dimension-1-c.FINDER_SIZE&&i<=c.FINDER_SIZE||e<=c.FINDER_SIZE&&i>=this.dimension-1-c.FINDER_SIZE||this.drawAlignment(e,i);this.drawFormatInfo(0),this.drawVersionInfo(0)}cursorReset(){this.cursorX=this.dimension-1,this.cursorY=this.dimension-1}cursorAdvance(){for(;this.cursorX>=0;)if(this.cursorX&1^(this.cursorX>c.TIMING_OFFSET?1:0)?this.cursorX--:(this.cursorX++,(this.cursorX-(this.cursorX>c.TIMING_OFFSET?1:0))/2&1?this.cursorY<=0?this.cursorX-=2:this.cursorY--:this.cursorY>=this.dimension-1?this.cursorX-=2:this.cursorY++),!this.identifyModule(this.cursorX,this.cursorY))return!0;return!1}cursorWrite(t,e,i){let n=e;for(let s=0;s<i;s++){let o=t.read(n);if(this.setModule(this.cursorX,this.cursorY,o),n++,!this.cursorAdvance())break}return n-e}drawFormatInfo(t){const e="Fo";for(let i=0;i<15;i++){const n=t>>i&1;i<6?this.setModule(c.FINDER_SIZE+1,i,n,e):i==6?this.setModule(c.FINDER_SIZE+1,c.FINDER_SIZE,n,e):i==7?this.setModule(c.FINDER_SIZE+1,c.FINDER_SIZE+1,n,e):i==8?this.setModule(c.FINDER_SIZE,c.FINDER_SIZE+1,n,e):this.setModule(14-i,c.FINDER_SIZE+1,n,e),i<8?this.setModule(this.dimension-1-i,c.FINDER_SIZE+1,n,e):this.setModule(c.FINDER_SIZE+1,this.dimension-c.FINDER_SIZE-8+i,n,e)}this.setModule(c.FINDER_SIZE+1,this.dimension-1-c.FINDER_SIZE,c.MODULE_DARK,e)}drawVersionInfo(t){const e="Ve";if(!(t===null||this.version<7))for(let i=0;i<18;i++){const n=t>>i&1,s=Math.floor(i/c.VERSION_SIZE),o=i%c.VERSION_SIZE;this.setModule(s,this.dimension-1-c.FINDER_SIZE-c.VERSION_SIZE+o,n,e),this.setModule(this.dimension-1-c.FINDER_SIZE-c.VERSION_SIZE+o,s,n,e)}}applyMaskPattern(t){for(let e=0;e<this.dimension;e++)for(let i=0;i<this.dimension;i++)if(!this.identifyModule(i,e)&&c.calculateMask(t,i,e)){const l=1^this.getModule(i,e);this.setModule(i,e,l)}}evaluatePenalty(){let n=0;for(let s=0;s<=1;s++){let o=Array(5),l=0;for(let u=0;u<this.dimension;u++){let f=-1,d=0;for(let E=0;E<this.dimension;E++){let D=this.getModule(s?u:E,s?E:u);if(D==f&&d++,D!=f||E>=this.dimension-1){if(f>=0&&(d>=5&&(n+=3+(d-5)),l++,o[l%5]=d,l>=5)){let g=o[(l+1)%5];o[l%5]==3*g&&g==o[(l+2)%5]&&g==o[(l+3)%5]&&g==o[(l+4)%5]&&(n+=40)}d=1,f=D}}}}{let s=0;for(let d=0;d<this.dimension;d++)for(let E=0;E<this.dimension;E++)this.getModule(E,d)==c.MODULE_DARK&&s++;let o=(100*s+this.dimension*this.dimension/2)/(this.dimension*this.dimension),l=Math.abs(o-50),f=10*Math.floor(l/5);n+=f}return n}};M(c,"MODULE_LIGHT",0),M(c,"MODULE_DARK",1),M(c,"FINDER_SIZE",7),M(c,"TIMING_OFFSET",6),M(c,"VERSION_SIZE",3),M(c,"ALIGNMENT_RADIUS",2),M(c,"QUIET_NONE",0),M(c,"QUIET_STANDARD",4);let v=c;const h=class h{static dimension(t){return 17+4*t}static totalDataModules(t){return(16*t+128)*t+64-(t<2?0:(25*(Math.floor(t/7)+2)-10)*(Math.floor(t/7)+2)-55)-(t<7?0:36)}static dataCapacity(t,e){const i=Math.floor(h.totalDataModules(t)/8),n=h.eccBlockCodewords(t,e)*h.eccBlockCount(t,e);return(i-n)*8}static eccBlockCount(t,e){return[[0,1,1,1,2,2,4,4,4,5,5,5,8,9,9,10,10,11,13,14,16,17,17,18,20,21,23,25,26,28,29,31,33,35,37,38,40,43,45,47,49],[0,1,1,1,1,1,2,2,2,2,4,4,4,4,4,6,6,6,6,7,8,8,9,9,10,12,12,12,13,14,15,16,17,18,19,19,20,21,22,24,25],[0,1,1,2,4,4,4,5,6,8,8,11,11,16,16,18,16,19,21,25,25,25,34,30,32,35,37,40,42,45,48,51,54,57,60,63,66,70,74,77,81],[0,1,1,2,2,4,4,6,6,8,8,8,10,12,16,12,17,16,18,21,20,23,23,25,27,29,34,34,35,38,40,43,45,48,51,53,56,59,62,65,68]][e][t]}static eccBlockCodewords(t,e){return[[0,10,16,26,18,24,16,18,22,22,26,30,22,22,24,24,28,28,26,26,26,26,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28],[0,7,10,15,20,26,18,20,24,30,18,20,24,26,30,22,24,28,30,28,28,28,28,30,30,26,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30],[0,17,28,22,16,22,28,26,26,24,28,24,28,22,24,24,30,28,28,26,28,30,24,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30],[0,13,22,18,26,18,24,18,22,20,24,28,26,24,20,30,24,28,28,26,30,28,30,30,30,30,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30]][e][t]}static calculateVersionInfo(t){if(t<7)return null;let e=t;for(let n=0;n<12;n++)e=e<<1^(e>>>11)*7973;return t<<12|e}static calculateFormatInfo(t,e){const i=(t&3)<<3|e&7;let n=i;for(let l=0;l<10;l++)n=n<<1^(n>>>9)*1335;let s=i<<10|n&1023;return s^=21522,s}static measureSegments(t,e){let i=0;for(let n of t)i+=n.mode.totalSize(e,n.text);return i}static doSegmentsFit(t,e,i){const n=h.measureSegments(t,e),s=h.dataCapacity(e,i);return n<=s}static findMinimumVersion(t,e,i=h.VERSION_MIN,n=h.VERSION_MAX){for(let s=i;s<=n;s++)if(h.doSegmentsFit(t,s,e))return s;throw"Cannot fit data in any allowed versions"}static tryToImproveErrorCorrectionLevel(t,e,i){const n=Object.values(h.ErrorCorrectionLevel);for(let s=1;s<n.length;s++)i==n[s-1]&&h.doSegmentsFit(t,e,n[s])&&(i=n[s]);return i}static writeData(t,e,i){for(let n of i)n.mode.encode(t,e,n.text)}static writePadding(t,e,i){const n=h.dataCapacity(e,i);let s;for(s=Math.min(n-t.position(),y.MODE_BITS),t.append(y.MODE_INDICATOR_TERMINATOR,s),s=Math.min(n-t.position(),8-(t.position()&7)&7),t.append(0,s);(s=Math.min(n-t.position(),16))>0;)t.append(h.PAD_CODEWORDS>>16-s,s);console.assert(t.position()===n,"Unexpectedly failed to correctly fill the data buffer")}static calculateEccAndFillMatrix(t,e,i,n){const s=h.eccBlockCount(e,i),o=h.eccBlockCodewords(e,i),l=h.totalDataModules(e),u=Math.floor((l-8*o*s)/8);console.assert(8*u===t.bitOffset,`Expected current bit position ${t.bitOffset} to match ECC offset *8 ${8*u}`);const f=b.Divisor(o),d=u,E=Math.floor(d/s),D=s-(d-E*s),g=E+(D>=s?0:1);for(let I=0;I<s;I++){let p;I<D?p=I*E:p=I*E+(I-D);let w=E+(I<D?0:1),N=u+I*o;b.Remainder(t.buffer,p,w,f,o,t.buffer,N)}n.cursorReset();let a=0;for(let I=0;I<g;I++)for(let p=0;p<s;p++){if(I>=E&&p<D)continue;const N=(p*E+(p>D?p-D:0)+I)*8,P=8;a+=n.cursorWrite(t,N,P)}for(let I=0;I<o;I++)for(let p=0;p<s;p++){const w=8*u+p*o*8+I*8,N=8;a+=n.cursorWrite(t,w,N)}const S=v.MODULE_LIGHT;for(;a<l&&(n.setModule(n.cursorX,n.cursorY,S),a++,!!n.cursorAdvance()););}static findOptimalMaskPattern(t){let e=-1,i=null;for(let n=0;n<=7;n++){t.applyMaskPattern(n);const s=t.evaluatePenalty();t.applyMaskPattern(n),(e<0||s<e)&&(e=s,i=n)}return i}constructor(){}static generate(t,e){const i=Object.assign({errorCorrectionLevel:h.ErrorCorrectionLevel.M,minVersion:h.VERSION_MIN,maxVersion:h.VERSION_MAX,optimizeEcc:!0,maskPattern:null,quiet:v.QUIET_STANDARD,invert:!1},e),s=(Array.isArray(t)?t:[t]).map(a=>new y(a));let o=i.errorCorrectionLevel;const l=h.findMinimumVersion(s,o,i.minVersion,i.maxVersion);i.optimizeEcc&&(o=h.tryToImproveErrorCorrectionLevel(s,l,o));const u=h.totalDataModules(l),f=new z(u);h.writeData(f,l,s),h.writePadding(f,l,o);const d=new v(l);d.text=t,d.quiet=i.quiet,d.invert=i.invert,d.populateFunctionPatterns(),h.calculateEccAndFillMatrix(f,l,o,d);let E=i.maskPattern;E===null&&(E=h.findOptimalMaskPattern(d)),d.applyMaskPattern(E);const D=h.calculateVersionInfo(l);d.drawVersionInfo(D);const g=h.calculateFormatInfo(o,E);return d.drawFormatInfo(g),d}static render(t,e,i){const n={debug:q,large:H,medium:$,compact:x,svg:k,"svg-uri":X,bmp:L,"bmp-uri":W};if(!n[t])throw new Error("ERROR: Invalid render mode: "+t);return n[t](e,i)}};M(h,"VERSION_MIN",1),M(h,"VERSION_MAX",40),M(h,"ErrorCorrectionLevel",{L:1,M:0,Q:3,H:2}),M(h,"ECC_CODEWORDS_MAX",30),M(h,"PAD_CODEWORDS",60433);let C=h;function V(r,t,e,i=!1){const n=i?32:24,s=14,o={BITMAPCOREHEADER:12,BITMAPINFOHEADER:40,BITMAPV2INFOHEADER:52,BITMAPV3INFOHEADER:56,BITMAPV4HEADER:108,BITMAPV5HEADER:124},l=i?"BITMAPV4HEADER":"BITMAPCOREHEADER";if(!o.hasOwnProperty(l))throw`Unknown BMP header version: ${l}`;const u=o[l],f=4*Math.floor((t*Math.floor((n+7)/8)+3)/4),d=f*Math.abs(e),E=s+u,D=E+d,g=new ArrayBuffer(D),a=new DataView(g);if(a.setUint8(0,"B".charCodeAt(0)),a.setUint8(1,"M".charCodeAt(0)),a.setUint32(2,D,!0),a.setUint16(6,0,!0),a.setUint16(8,0,!0),a.setUint32(10,E,!0),u==o.BITMAPCOREHEADER?(a.setUint32(14,u,!0),a.setUint16(18,t,!0),a.setInt16(20,e,!0),a.setUint16(22,1,!0),a.setUint16(24,n,!0)):u>=o.BITMAPINFOHEADER&&(a.setUint32(14,u,!0),a.setUint32(18,t,!0),a.setInt32(22,e,!0),a.setUint16(26,1,!0),a.setUint16(28,n,!0),a.setUint32(30,i?3:0,!0),a.setUint32(34,d,!0),a.setUint32(38,2835,!0),a.setUint32(42,2835,!0),a.setUint32(46,0,!0),a.setUint32(50,0,!0)),u>=o.BITMAPV2INFOHEADER&&(a.setUint32(54,i?16711680:0,!0),a.setUint32(58,i?65280:0,!0),a.setUint32(62,i?255:0,!0)),u>=o.BITMAPV3INFOHEADER&&a.setUint32(66,i?4278190080:0,!0),u>=o.BITMAPV4HEADER){const S="Win ";a.setUint8(70,S.charCodeAt(0)),a.setUint8(71,S.charCodeAt(1)),a.setUint8(72,S.charCodeAt(2)),a.setUint8(73,S.charCodeAt(3)),a.setUint32(110,0,!0),a.setUint32(114,0,!0),a.setUint32(118,0,!0)}u>=o.BITMAPV5HEADER&&(a.setUint32(122,4,!0),a.setUint32(126,0,!0),a.setUint32(130,0,!0),a.setUint32(134,0,!0));for(let S=0;S<e;S++){let I=E+(e-1-S)*f;for(let p=0;p<t;p++){const w=r[S*t+p];a.setUint8(I+0,w[2]),a.setUint8(I+1,w[1]),a.setUint8(I+2,w[0]),i?(a.setUint8(I+3,w[3]),I+=4):I+=3}}return g}function q(r,t){t=Object.assign({segments:["  ","██"],sep:`
`},t);const e=[];for(let i=-r.quiet;i<r.dimension+r.quiet;i++){const n=[];for(let s=-r.quiet;s<r.dimension+r.quiet;s++){let o=r.identifyModule(s,i);const u=(r.getModule(s,i)?!r.invert:r.invert)?1:0;(typeof o>"u"||o===null)&&(o=t.segments[u]),n.push(o)}e.push(n.join(""))}return e.join(t.sep)}function H(r,t){t=Object.assign({segments:["  ","██"],sep:`
`},t);const e=[];for(let i=-r.quiet;i<r.dimension+r.quiet;i++){const n=[];for(let s=-r.quiet;s<r.dimension+r.quiet;s++){const o=r.getModule(s,i)?!r.invert:r.invert,l=o?1:0,u=t.segments.length>=3&&o&&!r.identifyModule(s,i)?t.segments[2]:t.segments[l];n.push(u)}e.push(n.join(""))}return e.join(t.sep)}function $(r,t){t=Object.assign({segments:[" ","▀","▄","█"],sep:`
`},t);const e=[];for(let i=-r.quiet;i<r.dimension+r.quiet;i+=2){const n=[];for(let s=-r.quiet;s<r.dimension+r.quiet;s++){const o=r.getModule(s,i)?!r.invert:r.invert,l=i+1<r.dimension&&r.getModule(s,i+1)?!r.invert:r.invert,u=(o?1:0)|(l?2:0),f=t.segments[u];n.push(f)}e.push(n.join(""))}return e.join(t.sep)}function x(r,t){t=Object.assign({segments:[" ","▘","▝","▀","▖","▌","▞","▛","▗","▚","▐","▜","▄","▙","▟","█"],sep:`
`},t);const e=[];for(let i=-r.quiet;i<r.dimension+r.quiet;i+=2){const n=[];for(let s=-r.quiet;s<r.dimension+r.quiet;s+=2){let o=0;o|=(r.getModule(s,i)?!r.invert:r.invert)?1:0,o|=(s+1<r.dimension&&r.getModule(s+1,i)?!r.invert:r.invert)?2:0,o|=(i+1<r.dimension&&r.getModule(s,i+1)?!r.invert:r.invert)?4:0,o|=(i+1<r.dimension&&s+1<r.dimension&&r.getModule(s+1,i+1)?!r.invert:r.invert)?8:0;let l=t.segments[o];n.push(l)}e.push(n.join(""))}return e.join(t.sep)}function G(r){return r.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\"/g,"&quot;").replace(/\'/g,"&apos;")}function k(r,t){t=Object.assign({moduleRound:null,finderRound:null,alignmentRound:null,white:!1,moduleSize:1},t);const e=`${-r.quiet-t.moduleSize/2}`,i=`${2*(r.quiet+t.moduleSize/2)+r.dimension-1}`,n=[];n.push('<?xml version="1.0"?>'),n.push(`<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="currentColor" viewBox="${e} ${e} ${i} ${i}" shape-rendering="crispEdges">`),n.push(`<title>${G(r.text)}</title>`),n.push("<defs>"),n.push(`<rect id="b" x="${-t.moduleSize/2}" y="${-t.moduleSize/2}" width="${t.moduleSize}" height="${t.moduleSize}" rx="${.5*(t.moduleRound||0)*t.moduleSize}" />`),t.white&&n.push('<path id="w" d="" visibility="hidden" />'),t.finderRound!=null?(n.push('<path id="f" d="" visibility="hidden" />'),t.white&&n.push('<path id="fw" d="" visibility="hidden" />'),n.push(`<g id="fc"><rect x="-3" y="-3" width="6" height="6" rx="${3*t.finderRound}" stroke="currentColor" stroke-width="1" fill="none" /><rect x="-1.5" y="-1.5" width="3" height="3" rx="${1.5*t.finderRound}" /></g>`),n.push(`<g id="fc"><rect x="-3" y="-3" width="6" height="6" rx="${3*t.finderRound}" stroke="currentColor" stroke-width="1" fill="none" /><rect x="-1.5" y="-1.5" width="3" height="3" rx="${1.5*t.finderRound}" /></g>`)):(n.push('<use id="f" xlink:href="#b" />'),t.white&&n.push('<use id="fw" xlink:href="#w" />'),n.push('<path id="fc" d="" visibility="hidden" />')),t.alignmentRound!=null?(n.push('<path id="a" d="" visibility="hidden" />'),t.white&&n.push('<path id="aw" d="" visibility="hidden" />'),n.push(`<g id="ac"><rect x="-2" y="-2" width="4" height="4" rx="${2*t.alignmentRound}" stroke="currentColor" stroke-width="1" fill="none" /><rect x="-0.5" y="-0.5" width="1" height="1" rx="${.5*t.alignmentRound}" /></g>`)):(n.push('<use id="a" xlink:href="#b" />'),t.white&&n.push('<use id="aw" xlink:href="#w" />'),n.push('<path id="ac" d="" visibility="hidden" />')),n.push("</defs>");for(let o=0;o<r.dimension;o++)for(let l=0;l<r.dimension;l++){const u=r.identifyModule(l,o);let f=r.getModule(l,o);r.invert&&(f=!f);let d=f?"b":"w";u=="Fi"||u=="FI"?d=f?"f":"fw":(u=="Al"||u=="AL")&&(d=f?"a":"aw"),(f||t.white)&&n.push(`<use x="${l}" y="${o}" xlink:href="#${d}" />`)}for(let o=0;o<r.dimension;o++)for(let l=0;l<r.dimension;l++){const u=r.identifyModule(l,o);let f=null;u=="FI"?f="fc":u=="AL"&&(f="ac"),f!=null&&n.push(`<use x="${l}" y="${o}" xlink:href="#${f}" />`)}return n.push("</svg>"),n.join(`
`)}function X(r,t){return"data:image/svg+xml,"+encodeURIComponent(k(r,t))}function L(r,t){t=Object.assign({scale:8,alpha:!1,width:null,height:null},t);const e=r.dimension+2*r.quiet;t.width===null&&(t.width=Math.floor(e*t.scale)),t.height===null&&(t.height=t.width);const i=Array(t.width*t.height).fill(null);for(let s=0;s<t.height;s++){const o=Math.floor(s*e/t.height)-r.quiet;for(let l=0;l<t.width;l++){const u=Math.floor(l*e/t.width)-r.quiet;let f=r.getModule(u,o),d;r.invert?d=f?[255,255,255,255]:[0,0,0,0]:d=f?[0,0,0,255]:[255,255,255,0],i[s*t.width+l]=d}}return V(i,t.width,t.height,t.alpha)}function W(r,t){const e=L(r,t);return"data:image/bmp;base64,"+btoa(new Uint8Array(e).reduce((n,s)=>n+String.fromCharCode(s),""))}const j=(r,t)=>{const e=C.generate(r),i=C.render("svg",e);t.innerHTML=i};const K=document.getElementById("qrCodeArea");j("https://uncodigo.com/",K);
